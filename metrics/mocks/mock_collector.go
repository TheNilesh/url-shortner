// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	metrics "github.com/thenilesh/url-shortner/metrics"
)

// Collector is an autogenerated mock type for the Collector type
type Collector struct {
	mock.Mock
}

// GetMaxValuePairs provides a mock function with given fields: n
func (_m *Collector) GetMaxValuePairs(n int) []metrics.KeyValuePair {
	ret := _m.Called(n)

	var r0 []metrics.KeyValuePair
	if rf, ok := ret.Get(0).(func(int) []metrics.KeyValuePair); ok {
		r0 = rf(n)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]metrics.KeyValuePair)
		}
	}

	return r0
}

// Inc provides a mock function with given fields: key
func (_m *Collector) Inc(key string) {
	_m.Called(key)
}

// Start provides a mock function with given fields:
func (_m *Collector) Start() {
	_m.Called()
}

// NewCollector creates a new instance of Collector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCollector(t interface {
	mock.TestingT
	Cleanup(func())
}) *Collector {
	mock := &Collector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
